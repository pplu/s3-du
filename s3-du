#!/usr/bin/env perl

use strict;
use warnings;
use v5.10;

use Paws;
use Data::Dumper;

use HTTPTinyResponseRecorder;

my $bucket = $ARGV[0];

my $s3 = Paws->service('S3', region => 'eu-west-1', caller => HTTPTinyResponseRecorder->new);

my $price = 0.03;

if (not defined $bucket) {
  my $list = $s3->ListBuckets;
  print Dumper($list);
} else {
  my $tree = {};
  my $token;
  do {
    my $res = $s3->ListObjectsV2(
      Bucket => $bucket,
      (defined $token) ? (ContinuationToken => $token) : (),
    );

    process_elements($tree, $res->Contents);

    if ($res->IsTruncated) {
      $token = $res->NextContinuationToken;
    } else {
      $token = undef;
    }
  } until (not defined $token);

  print Dumper($tree);
}

sub process_elements {
  my ($tree, $objects) = @_;

  for my $file (@$objects) {
    my $size = $file->Size;

    my @path = split /\//, $file->Key;

    my $t = $tree;
    while (@path >= 2) {
      $t->{ children }->{ $path[0] } = {} if (not defined $t->{ children }->{ $path[0] });
      $t = $t->{ children }->{ $path[0] };

      if (@path == 2) {
        $t->{ _file_size  } += $size;
        $t->{ _file_count } += 1;
        $t->{ _file_price } += ($size * 0.03) / (1024 * 1024 * 1024);
      } else {
        $t->{ _children_size  } += $size;
        $t->{ _children_count } += 1;
        $t->{ _children_price } += ($size * 0.03) / (1024 * 1024 * 1024);
      }

      shift @path;
    }
  }
}

